'use strict';Object.defineProperty(exports,'__esModule',{value:true});var X=require('axios'),y=require('xlsx'),pdfLib=require('pdf-lib');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}});}})}n.default=e;return Object.freeze(n)}var X__default=/*#__PURE__*/_interopDefault(X);var y__namespace=/*#__PURE__*/_interopNamespace(y);var E=class{constructor(e){this.config={baseUrl:"https://api.rocketlane.com",timeout:3e4,retries:3,...e},this.client=X__default.default.create({baseURL:this.config.baseUrl||"https://api.rocketlane.com",timeout:this.config.timeout||3e4,headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json",Accept:"application/json"}}),this.setupInterceptors();}setupInterceptors(){this.client.interceptors.response.use(e=>e,e=>{let t=new Error(e.response?.data?.message||e.message||"An error occurred");return t.statusCode=e.response?.status,t.response=e.response,Promise.reject(t)}),this.client.interceptors.request.use(e=>(e.metadata={startTime:Date.now()},e));}async request(e){let t={method:e.method,url:e.url,data:e.data,params:e.params,...e.headers&&{headers:e.headers}},s=0,r;for(;s<(this.config.retries||1);)try{return (await this.client.request(t)).data}catch(i){if(r=i,s++,s<(this.config.retries||1)&&this.shouldRetry(i)){await this.delay(Math.pow(2,s)*1e3);continue}break}throw r}shouldRetry(e){return e.statusCode?e.statusCode>=500||e.statusCode===429:true}delay(e){return new Promise(t=>setTimeout(t,e))}async get(e,t){return this.request({method:"GET",url:e,...t&&{params:t}})}async post(e,t,s){return this.request({method:"POST",url:e,...t!==void 0&&{data:t},...s&&{params:s}})}async put(e,t,s){return this.request({method:"PUT",url:e,...t!==void 0&&{data:t},...s&&{params:s}})}async patch(e,t,s){return this.request({method:"PATCH",url:e,...t!==void 0&&{data:t},...s&&{params:s}})}async delete(e,t){return this.request({method:"DELETE",url:e,...t&&{params:t}})}};var v=class{static exportToCSV(e,t={}){let{filename:s=`export_${Date.now()}.csv`,fields:r,includeHeaders:i=true,delimiter:a=",",encoding:n="utf-8"}=t;if(e.length===0)throw new Error("No data to export");let o=r||Object.keys(e[0]),c="";i&&(c+=o.map(u=>this.escapeCsvField(u)).join(a)+`
`),e.forEach(u=>{let h=o.map(d=>{let g=u[d];return this.escapeCsvField(this.formatValue(g,t))});c+=h.join(a)+`
`;});let l=new Blob([c],{type:"text/csv;charset="+n});return {filename:s,format:"csv",recordCount:e.length,fileSize:l.size,exportedAt:new Date,fields:o}}static exportToJSON(e,t={}){let{filename:s=`export_${Date.now()}.json`,fields:r,compress:i=false}=t,a=e;r&&(a=e.map(c=>{let l={};return r.forEach(u=>{u in c&&(l[u]=c[u]);}),l}));let n=JSON.stringify({metadata:{exportedAt:new Date().toISOString(),recordCount:e.length,fields:r||Object.keys(e[0])},data:a},null,i?0:2),o=new Blob([n],{type:"application/json"});return {filename:s,format:"json",recordCount:e.length,fileSize:o.size,exportedAt:new Date,fields:r||Object.keys(e[0])}}static exportToExcel(e,t={}){let{filename:s=`export_${Date.now()}.xlsx`,fields:r,sheetName:i="Sheet1"}=t;if(e.length===0)throw new Error("No data to export");let a=r||Object.keys(e[0]),n=y__namespace.utils.book_new(),o=[a,...e.map(u=>a.map(h=>this.formatValue(u[h],t)))],c=y__namespace.utils.aoa_to_sheet(o);c["!cols"]=a.map(()=>({width:15})),y__namespace.utils.book_append_sheet(n,c,i);let l=y__namespace.write(n,{bookType:"xlsx",type:"array"});return {filename:s,format:"xlsx",recordCount:e.length,fileSize:l.byteLength,exportedAt:new Date,fields:a}}static async exportToPDF(e,t={}){let{filename:s=`export_${Date.now()}.pdf`,fields:r,template:i}=t;if(e.length===0)throw new Error("No data to export");let a=r||Object.keys(e[0]),n=await pdfLib.PDFDocument.create(),o=await n.embedFont(pdfLib.StandardFonts.Helvetica),c=await n.embedFont(pdfLib.StandardFonts.HelveticaBold),l=n.addPage([595,842]),{width:u,height:h}=l.getSize(),d=h-50,g=10,k=14,T=50,b=(u-2*T)/a.length;a.forEach((P,R)=>{l.drawText(String(P),{x:T+R*b,y:d,size:g,font:c,color:pdfLib.rgb(0,0,0)});}),d-=k*2;for(let P of e)d<50&&(l=n.addPage([595,842]),d=h-50),a.forEach((R,W)=>{let $=this.formatValue(P[R],t),G=$.length>20?$.substring(0,17)+"...":$;l.drawText(G,{x:T+W*b,y:d,size:g,font:o,color:pdfLib.rgb(0,0,0)});}),d-=k;let w=await n.save();return {filename:s,format:"pdf",recordCount:e.length,fileSize:w.byteLength,exportedAt:new Date,fields:a}}static exportToXML(e,t={}){let{filename:s=`export_${Date.now()}.xml`,fields:r,encoding:i="utf-8"}=t;if(e.length===0)throw new Error("No data to export");let a=r||Object.keys(e[0]),n=`<?xml version="1.0" encoding="${i}"?>
`;n+=`<export>
`,n+=`  <metadata>
`,n+=`    <exportedAt>${new Date().toISOString()}</exportedAt>
`,n+=`    <recordCount>${e.length}</recordCount>
`,n+=`    <fields>${a.join(",")}</fields>
`,n+=`  </metadata>
`,n+=`  <data>
`,e.forEach(c=>{n+=`    <record>
`,a.forEach(l=>{let u=this.formatValue(c[l],t),h=this.escapeXmlValue(u);n+=`      <${l}>${h}</${l}>
`;}),n+=`    </record>
`;}),n+=`  </data>
`,n+="</export>";let o=new Blob([n],{type:"application/xml"});return {filename:s,format:"xml",recordCount:e.length,fileSize:o.size,exportedAt:new Date,fields:a}}static async generateExport(e,t){let s,r;switch(t.format){case "csv":s=this.exportToCSV(e,t),r=this.createCSVBlob(e,t);break;case "json":s=this.exportToJSON(e,t),r=this.createJSONBlob(e,t);break;case "xlsx":s=this.exportToExcel(e,t),r=this.createExcelBlob(e,t);break;case "pdf":s=await this.exportToPDF(e,t),r=await this.createPDFBlob(e,t);break;case "xml":s=this.exportToXML(e,t),r=this.createXMLBlob(e,t);break;default:throw new Error(`Unsupported export format: ${t.format}`)}let i=URL.createObjectURL(r);return {...s,blob:r,downloadUrl:i}}static createCSVBlob(e,t){let{fields:s,includeHeaders:r=true,delimiter:i=","}=t;if(e.length===0)throw new Error("No data to export");let a=s||Object.keys(e[0]),n="";return r&&(n+=a.map(o=>this.escapeCsvField(o)).join(i)+`
`),e.forEach(o=>{let c=a.map(l=>{let u=o[l];return this.escapeCsvField(this.formatValue(u,t))});n+=c.join(i)+`
`;}),new Blob([n],{type:"text/csv"})}static createJSONBlob(e,t){let{fields:s,compress:r=false}=t,i=e;s&&(i=e.map(n=>{let o={};return s.forEach(c=>{c in n&&(o[c]=n[c]);}),o}));let a=JSON.stringify({metadata:{exportedAt:new Date().toISOString(),recordCount:e.length,fields:s||Object.keys(e[0])},data:i},null,r?0:2);return new Blob([a],{type:"application/json"})}static createExcelBlob(e,t){let s=t.fields||Object.keys(e[0]),r=t.sheetName||"Sheet1",i=y__namespace.utils.book_new(),a=[s,...e.map(c=>s.map(l=>this.formatValue(c[l],t)))],n=y__namespace.utils.aoa_to_sheet(a);n["!cols"]=s.map(()=>({width:15})),y__namespace.utils.book_append_sheet(i,n,r);let o=y__namespace.write(i,{bookType:"xlsx",type:"array"});return new Blob([o],{type:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})}static async createPDFBlob(e,t){let s=t.fields||Object.keys(e[0]),r=await pdfLib.PDFDocument.create(),i=await r.embedFont(pdfLib.StandardFonts.Helvetica),a=await r.embedFont(pdfLib.StandardFonts.HelveticaBold),n=r.addPage([595,842]),{width:o,height:c}=n.getSize(),l=c-50,u=10,h=14,d=50,g=(o-2*d)/s.length;s.forEach((T,b)=>{n.drawText(String(T),{x:d+b*g,y:l,size:u,font:a,color:pdfLib.rgb(0,0,0)});}),l-=h*2;for(let T of e)l<50&&(n=r.addPage([595,842]),l=c-50),s.forEach((b,w)=>{let P=this.formatValue(T[b],t),R=P.length>20?P.substring(0,17)+"...":P;n.drawText(R,{x:d+w*g,y:l,size:u,font:i,color:pdfLib.rgb(0,0,0)});}),l-=h;let k=await r.save();return new Blob([k],{type:"application/pdf"})}static createXMLBlob(e,t){let s=t.fields||Object.keys(e[0]),i=`<?xml version="1.0" encoding="${t.encoding||"utf-8"}"?>
`;return i+=`<export>
`,i+=`  <metadata>
`,i+=`    <exportedAt>${new Date().toISOString()}</exportedAt>
`,i+=`    <recordCount>${e.length}</recordCount>
`,i+=`    <fields>${s.join(",")}</fields>
`,i+=`  </metadata>
`,i+=`  <data>
`,e.forEach(a=>{i+=`    <record>
`,s.forEach(n=>{let o=this.formatValue(a[n],t),c=this.escapeXmlValue(o);i+=`      <${n}>${c}</${n}>
`;}),i+=`    </record>
`;}),i+=`  </data>
`,i+="</export>",new Blob([i],{type:"application/xml"})}static escapeCsvField(e){if(e==null)return "";let t=String(e);return t.includes(",")||t.includes('"')||t.includes(`
`)?`"${t.replace(/"/g,'""')}"`:t}static formatValue(e,t){return e==null?"":e instanceof Date?t.dateFormat?this.formatDate(e,t.dateFormat):e.toISOString():typeof e=="object"?JSON.stringify(e):String(e)}static formatDate(e,t){let s=e.getFullYear(),r=String(e.getMonth()+1).padStart(2,"0"),i=String(e.getDate()).padStart(2,"0");return t.replace("YYYY",String(s)).replace("MM",r).replace("DD",i)}static escapeXmlValue(e){return e==null?"":String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}},f=class{static async validateImportData(e,t,s={}){let r=[],i=[];if(!Array.isArray(e))return {valid:false,errors:[{row:0,error:"Invalid data format: expected array"}],warnings:[],preview:[]};e.forEach((n,o)=>{this.validateRow(n,t,o+1,r,s);});let a=e.slice(0,5).map(n=>this.mapFields(n,s.mapping));return {valid:r.length===0,errors:r,warnings:i,preview:a}}static async importData(e,t,s={}){let{onError:r="stop",batchSize:i=10,dryRun:a=false,skipRows:n=0,maxRows:o}=s,c=[],l=[],u=0,h=n,d=e.slice(n,o?n+o:void 0);for(let g=0;g<d.length;g+=i){let k=d.slice(g,g+i);for(let T=0;T<k.length;T++){let b=k[T],w=h+g+T+1;try{let P=this.mapFields(b,s.mapping);if(!a){let R=await t(P);c.push(R);}u++;}catch(P){let R={row:w,error:P instanceof Error?P.message:String(P),data:b};if(l.push(R),r==="stop")break;if(r==="skip"){h++;continue}}}if(r==="stop"&&l.length>0)break}return {success:l.length===0,imported:c,errors:l,skipped:h,total:d.length,importedAt:new Date,dryRun:a}}static parseCSV(e,t=","){let s=e.trim().split(`
`);if(s.length===0)return [];let r=this.parseCSVLine(s[0]||"",t),i=[];for(let a=1;a<s.length;a++){let n=this.parseCSVLine(s[a]||"",t),o={};r.forEach((c,l)=>{c!=null&&(o[c.trim()]=n[l]?.trim()||null);}),i.push(o);}return i}static parseJSON(e){try{let t=JSON.parse(e);if(Array.isArray(t))return t;if(t.data&&Array.isArray(t.data))return t.data;throw new Error("Invalid JSON format: expected array or object with data array")}catch(t){throw new Error(`JSON parsing error: ${t}`)}}static parseExcel(e){try{let t;if(typeof e=="string"){let o=typeof atob<"u"?atob(e):e;t=y__namespace.read(o,{type:"binary"});}else t=y__namespace.read(e,{type:"array"});let s=t.SheetNames[0];if(!s)throw new Error("No worksheets found in Excel file");let r=t.Sheets[s];if(!r)throw new Error("Worksheet not found");let i=y__namespace.utils.sheet_to_json(r,{header:1,defval:null,blankrows:!1});if(i.length===0)return [];let a=i[0];if(!a||a.length===0)throw new Error("No headers found in Excel file");return i.slice(1).map(o=>{let c={};return a.forEach((l,u)=>{l!=null&&(c[String(l)]=o[u]||null);}),c})}catch(t){throw new Error(`Excel parsing error: ${t}`)}}static parseCSVLine(e,t){let s=[],r="",i=false;for(let a=0;a<e.length;a++){let n=e[a];n==='"'?i&&e[a+1]==='"'?(r+='"',a++):i=!i:n===t&&!i?(s.push(r),r=""):r+=n;}return s.push(r),s}static mapFields(e,t){if(!t)return e;let s={};for(let[r,i]of Object.entries(t))r in e&&(s[i]=e[r]);for(let[r,i]of Object.entries(e))!t[r]&&!Object.values(t).includes(r)&&(s[r]=i);return s}static validateRow(e,t,s,r,i){for(let[a,n]of Object.entries(t)){let o=e[a];n.required&&(o==null||o==="")&&r.push({row:s,field:a,value:o,error:`${a} is required`}),n.type&&o!=null&&(this.validateType(o,n.type)||r.push({row:s,field:a,value:o,error:`${a} must be of type ${n.type}`}));}}static validateType(e,t){switch(t){case "number":return !isNaN(Number(e));case "boolean":return typeof e=="boolean"||e==="true"||e==="false";case "date":return !isNaN(Date.parse(e));case "email":return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e);default:return  true}}};var N=class{constructor(e){this.client=e;}createNavigableTask(e){let t=e;return t._client=this.client,t.getProject=async()=>{let s=await this.client.projects.get(e.project.projectId);return this.createNavigableProject(s)},t.getPhase=async()=>{if(!e.phase)return null;let s=await this.client.phases.getPhase(e.phase.phaseId);return this.createNavigablePhase(s)},t.getAssignees=async()=>e.assignees?(await Promise.all(e.assignees.map(r=>this.client.users.getUser(r.userId)))).map(r=>this.createNavigableUser(r)):[],t.getFollowers=async()=>e.followers?(await Promise.all(e.followers.map(r=>this.client.users.getUser(r.userId)))).map(r=>this.createNavigableUser(r)):[],t.getCreatedBy=async()=>{let s=await this.client.users.getUser(e.createdBy.userId);return this.createNavigableUser(s)},t.getUpdatedBy=async()=>{let s=await this.client.users.getUser(e.updatedBy.userId);return this.createNavigableUser(s)},t.getDependencies=async()=>e.dependencies?(await Promise.all(e.dependencies.map(r=>this.client.tasks.get(r.dependentTaskId)))).map(r=>this.createNavigableTask(r)):[],t.getDependents=async()=>(await this.client.tasks.getAllTasks({projectId:e.project.projectId})).filter(i=>i.dependencies?.some(a=>a.dependentTaskId===e.taskId)).map(i=>this.createNavigableTask(i)),t.getSiblings=async()=>{let s={projectId:e.project.projectId};return e.phase&&(s.phaseId=e.phase.phaseId),(await this.client.tasks.getAllTasks(s)).filter(i=>i.taskId!==e.taskId).map(i=>this.createNavigableTask(i))},t.getSubtasks=async()=>(await this.client.tasks.getAllTasks({projectId:e.project.projectId})).filter(r=>r.parent?.taskId===e.taskId).map(r=>this.createNavigableTask(r)),t.getParent=async()=>{if(!e.parent)return null;let s=await this.client.tasks.get(e.parent.taskId);return this.createNavigableTask(s)},t.getTimeEntries=async()=>(await this.client.timeTracking.getAllTimeEntries({taskId:e.taskId})).map(r=>this.createNavigableTimeEntry(r)),t.getTotalTimeSpent=async()=>(await t.getTimeEntries()).reduce((r,i)=>r+i.minutes,0),t.isOverdue=()=>e.dueDate?new Date(e.dueDate)<new Date&&e.status.label!=="Completed":false,t.isHighPriority=()=>e.priority?e.priority.value>3:false,t.getProgressPercentage=()=>e.progress||0,t}createNavigableProject(e){let t=e;return t._client=this.client,t.getTasks=async(s={})=>(await this.client.tasks.getAllTasks({...s,projectId:e.projectId})).map(i=>this.createNavigableTask(i)),t.getOverdueTasks=async()=>(await t.getTasks()).filter(r=>r.isOverdue()),t.getTasksByPhase=async s=>(await this.client.tasks.getAllTasks({projectId:e.projectId,phaseId:s})).map(i=>this.createNavigableTask(i)),t.getTasksByAssignee=async s=>(await this.client.tasks.getAllTasks({projectId:e.projectId,assigneeId:s})).map(i=>this.createNavigableTask(i)),t.getPhases=async()=>(await this.client.phases.getAllPhases({projectId:e.projectId})).map(r=>this.createNavigablePhase(r)),t.getActivePhases=async()=>(await t.getPhases()).filter(r=>r.status!=="Completed"),t.getTeamMembers=async()=>e.teamMembers?(await Promise.all(e.teamMembers.map(r=>this.client.users.getUser(r.userId)))).map(r=>this.createNavigableUser(r)):[],t.getOwner=async()=>{let s=await this.client.users.getUser(e.owner.userId);return this.createNavigableUser(s)},t.getTimeEntries=async(s={})=>(await this.client.timeTracking.getAllTimeEntries({...s,projectId:e.projectId})).map(i=>this.createNavigableTimeEntry(i)),t.getTotalTimeSpent=async()=>(await t.getTimeEntries()).reduce((r,i)=>r+i.minutes,0),t.getCompletionPercentage=async()=>{let s=await t.getTasks();if(s.length===0)return 0;let r=s.filter(i=>i.status.label==="Completed");return Math.round(r.length/s.length*100)},t.getProjectHealth=async()=>{let s=await t.getTasks(),r=s.filter(o=>o.isOverdue()),i=s.filter(o=>o.isHighPriority());s.filter(o=>o.status.label==="Completed");let n=Math.max(0,100-r.length*10-i.length*5);return {overallScore:n,tasksOnTrack:s.length-r.length-i.length,tasksAtRisk:i.length,tasksOverdue:r.length,teamUtilization:75,risks:r.length>0?["Overdue tasks detected"]:[],recommendations:n<70?["Review task priorities and deadlines"]:[]}},t}createNavigableUser(e){let t=e;return t._client=this.client,t.getAssignedTasks=async(s={})=>(await this.client.tasks.getAllTasks({...s,assigneeId:e.userId})).map(i=>this.createNavigableTask(i)),t.getFollowedTasks=async()=>(await this.client.tasks.getAllTasks()).filter(i=>i.followers?.some(a=>a.userId===e.userId)).map(i=>this.createNavigableTask(i)),t.getOverdueTasks=async()=>(await t.getAssignedTasks()).filter(r=>r.isOverdue()),t.getProjects=async()=>(await this.client.projects.getAllProjects()).filter(i=>i.owner.userId===e.userId||i.teamMembers?.some(a=>a.userId===e.userId)).map(i=>this.createNavigableProject(i)),t.getOwnedProjects=async()=>(await this.client.projects.getAllProjects({ownerId:e.userId})).map(r=>this.createNavigableProject(r)),t.getTimeEntries=async(s={})=>(await this.client.timeTracking.getAllTimeEntries({...s,userId:e.userId})).map(i=>this.createNavigableTimeEntry(i)),t.getTotalHoursThisWeek=async()=>{let s=new Date;s.setDate(s.getDate()-s.getDay()),s.setHours(0,0,0,0);let r=await t.getTimeEntries({dateFrom:s.toISOString().split("T")[0],dateTo:new Date().toISOString().split("T")[0]});return Math.round(r.reduce((i,a)=>i+a.minutes,0)/60)},t.getTotalHoursThisMonth=async()=>{let s=new Date;s.setDate(1),s.setHours(0,0,0,0);let r=await t.getTimeEntries({dateFrom:s.toISOString().split("T")[0],dateTo:new Date().toISOString().split("T")[0]});return Math.round(r.reduce((i,a)=>i+a.minutes,0)/60)},t.getWorkloadAnalysis=async(s,r)=>{let a=(await t.getTimeEntries({dateFrom:s,dateTo:r})).reduce((u,h)=>u+h.minutes,0),n=Math.round(a/60),o=new Date(s),c=new Date(r),l=Math.ceil((c.getTime()-o.getTime())/(1e3*3600*24));return {totalHours:n,averageHoursPerDay:Math.round(n/l*10)/10,peakDays:[],projectBreakdown:[],utilizationScore:Math.min(100,n/(l*8)*100),recommendations:n<l*4?["Consider increasing workload"]:[]}},t}createNavigablePhase(e){let t=e;return t._client=this.client,t}createNavigableTimeEntry(e){let t=e;return t._client=this.client,t}};var S=class{constructor(e){this.conditions=[];this.options={};this.tableName=e;}where(e,t,s,r){return this.conditions.push({field:e,operator:t,value:s,value2:r}),this}whereEquals(e,t){return this.where(e,"=",t)}whereNotEquals(e,t){return this.where(e,"!=",t)}whereGreaterThan(e,t){return this.where(e,">",t)}whereLessThan(e,t){return this.where(e,"<",t)}whereBetween(e,t,s){return this.where(e,"BETWEEN",t,s)}whereIn(e,t){return this.where(e,"IN",t)}whereContains(e,t){return this.where(e,"CONTAINS",t)}whereNotContains(e,t){return this.where(e,"NOT CONTAINS",t)}whereNotIn(e,t){return this.where(e,"NOT IN",t)}whereLike(e,t){return this.where(e,"LIKE",t)}select(e){return this.options.select=e,this}orderBy(e,t="asc"){return this.options.orderBy||(this.options.orderBy=[]),this.options.orderBy.push({field:e,direction:t.toLowerCase()}),this}groupBy(...e){return this.options.groupBy=e,this}limit(e){return this.options.limit=e,this}offset(e){return this.options.offset=e,this}async execute(){throw new Error("execute() method should be implemented by the resource class")}build(){let e={};if(this.conditions.forEach((t,s)=>{this.getParamKey(t.field,t.operator);switch(t.operator.toUpperCase()){case "=":e[t.field]=t.value;break;case "!=":case "<>":e[`${t.field}_ne`]=t.value;break;case ">":e[`${t.field}_gt`]=t.value;break;case "<":e[`${t.field}_lt`]=t.value;break;case ">=":e[`${t.field}_gte`]=t.value;break;case "<=":e[`${t.field}_lte`]=t.value;break;case "LIKE":e[`${t.field}_like`]=t.value;break;case "IN":e[`${t.field}_in`]=t.value;break;case "NOT IN":e[`${t.field}_nin`]=t.value;break;case "CONTAINS":e[`${t.field}_contains`]=t.value;break;case "BETWEEN":e[`${t.field}_gte`]=t.value,e[`${t.field}_lte`]=t.value2;break;case "NOT BETWEEN":e[`${t.field}_lt`]=t.value,e[`${t.field}_gt`]=t.value2;break}}),this.options.orderBy&&this.options.orderBy.length>0){let t=this.options.orderBy[0];t&&(e.sortBy=t.field,e.sortOrder=t.direction);}return this.options.limit&&(e.pageSize=this.options.limit),this.options.offset&&(e.offset=this.options.offset),{params:e,...this.options.select&&{select:this.options.select},...this.toSQL()&&{sql:this.toSQL()}}}toSQL(){let e=`SELECT ${this.getSelectClause()} FROM ${this.tableName}`;if(this.conditions.length>0){let t=this.conditions.map(s=>this.conditionToSQL(s)).join(" AND ");e+=` WHERE ${t}`;}if(this.options.groupBy&&this.options.groupBy.length>0&&(e+=` GROUP BY ${this.options.groupBy.join(", ")}`),this.options.orderBy&&this.options.orderBy.length>0){let t=this.options.orderBy.map(s=>`${s.field} ${s.direction.toUpperCase()}`).join(", ");e+=` ORDER BY ${t}`;}return this.options.limit&&(e+=` LIMIT ${this.options.limit}`),this.options.offset&&(e+=` OFFSET ${this.options.offset}`),e}getSelectClause(){return this.options.select?Array.isArray(this.options.select)?this.options.select.join(", "):Object.keys(this.options.select).join(", "):"*"}conditionToSQL(e){let{field:t,operator:s,value:r,value2:i}=e;switch(s.toUpperCase()){case "BETWEEN":return `${t} BETWEEN ${this.formatValue(r)} AND ${this.formatValue(i)}`;case "NOT BETWEEN":return `${t} NOT BETWEEN ${this.formatValue(r)} AND ${this.formatValue(i)}`;case "IN":return `${t} IN (${Array.isArray(r)?r.map(a=>this.formatValue(a)).join(", "):this.formatValue(r)})`;case "NOT IN":return `${t} NOT IN (${Array.isArray(r)?r.map(a=>this.formatValue(a)).join(", "):this.formatValue(r)})`;case "CONTAINS":return `${t} CONTAINS ${this.formatValue(r)}`;case "NOT CONTAINS":return `${t} NOT CONTAINS ${this.formatValue(r)}`;default:return `${t} ${s} ${this.formatValue(r)}`}}formatValue(e){return typeof e=="string"?`'${e}'`:e instanceof Date?`'${e.toISOString()}'`:String(e)}getParamKey(e,t){return `${e}_${t.toLowerCase().replace(/\s+/g,"_")}`}};function V(p,e){return p.map(t=>M(t,e))}function M(p,e){let t={};for(let[s,r]of Object.entries(e))s in p&&(r===true?t[s]=p[s]:typeof r=="object"&&p[s]&&(Array.isArray(p[s])?t[s]=p[s].map(i=>M(i,r)):t[s]=M(p[s],r)));return t}var m=class{constructor(e){this.httpClient=e;}enhanceResponse(e,t,s){let r=e;return r.getNextPage=async()=>{if(!e.pagination.hasMore||!e.pagination.nextPageToken)return null;let i={...t,pageToken:e.pagination.nextPageToken},a=await s(i);return this.enhanceResponse(a,t,s)},r.getAllRemaining=async()=>{let i=[...e.data],a=r;for(;a.pagination.hasMore&&a.pagination.nextPageToken;){let n=await a.getNextPage();if(!n)break;i.push(...n.data),a=n;}return i},r.iterateRemainingPages=async function*(){let i=r;for(;i&&(yield i,!(!i.pagination.hasMore||!i.pagination.nextPageToken));)i=await i.getNextPage();},r.iterateRemainingItems=async function*(){for await(let i of r.iterateRemainingPages())for(let a of i.data)yield a;},r}async getNextPageInternal(e,t,s){if(!e.pagination.hasMore||!e.pagination.nextPageToken)return null;let r={...t,pageToken:e.pagination.nextPageToken};return s(r)}async getAllPages(e,t,s=50){let r=[],i={...e},a=0;do{if(a>=s){console.warn(`Reached maximum page limit (${s}). Use manual pagination for very large datasets.`);break}let n=await t(i);if(r.push(...n.data),!n.pagination.hasMore||!n.pagination.nextPageToken)break;i={...i,pageToken:n.pagination.nextPageToken},a++;}while(true);return r}async*iteratePages(e,t){let s={...e};do{let r=await t(s);if(yield r,!r.pagination.hasMore||!r.pagination.nextPageToken)break;s={...s,pageToken:r.pagination.nextPageToken};}while(true)}async*iterateItems(e,t){for await(let s of this.iteratePages(e,t))for(let r of s.data)yield r;}createQueryBuilder(e){return new S(e)}async executeQuery(e,t){let{params:s,select:r,sql:i}=e.build(),a=new Date,o=(await t(s)).data;return r&&(Array.isArray(r)?o=o.map(c=>{let l={};return r.forEach(u=>{u in c&&(l[u]=c[u]);}),l}):o=V(o,r)),{data:o,query:i||"Generated from QueryBuilder",params:s,executedAt:a,count:o.length}}async executeSQL(e,t){let{query:s,params:r,parse:i}=e,a=i(),n=this.convertSQLToAPIParams(a,r),o=new Date,c=await t(n);return {data:c.data,query:s,params:n,executedAt:o,count:c.data.length}}applyFieldSelection(e,t){let s=V(e.data,t);return {...e,data:s}}convertSQLToAPIParams(e,t){let s={},r=0,i=e.conditions.raw||"";if(i.includes("projectId")&&(s.projectId=t[r++]),i.includes("status")&&(s.status=t[r++]),i.includes("assignees")&&(s.assigneeId=t[r++]),i.includes("dueDate")&&i.includes("BETWEEN")&&(s.dueDateFrom=t[r++],s.dueDateTo=t[r++]),e.options.orderBy){let a=e.options.orderBy.split(" ");s.sortBy=a[0],a[1]&&(s.sortOrder=a[1].toLowerCase());}return e.options.limit&&(s.pageSize=e.options.limit),s}};var j=class extends m{async list(e){return this.httpClient.get("/api/1.0/tasks",e)}async listWithPagination(e){let t=await this.list(e);return this.enhanceResponse(t,e||{},this.list.bind(this))}async get(e){return this.httpClient.get(`/api/1.0/tasks/${e}`)}async create(e){return this.httpClient.post("/api/1.0/tasks",e)}async update(e,t){return this.httpClient.put(`/api/1.0/tasks/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/tasks/${e}`)}async addAssignees(e,t){return this.httpClient.post(`/api/1.0/tasks/${e}/assignees`,t)}async removeAssignees(e,t){return this.httpClient.delete(`/api/1.0/tasks/${e}/assignees`,t)}async addFollowers(e,t){return this.httpClient.post(`/api/1.0/tasks/${e}/followers`,t)}async removeFollowers(e,t){return this.httpClient.delete(`/api/1.0/tasks/${e}/followers`,t)}async addDependencies(e,t){return this.httpClient.post(`/api/1.0/tasks/${e}/dependencies`,t)}async removeDependencies(e,t){return this.httpClient.delete(`/api/1.0/tasks/${e}/dependencies`,t)}async moveToPhase(e,t){return this.httpClient.post(`/api/1.0/tasks/${e}/move`,t)}async duplicate(e,t){let s=t?{projectId:t}:void 0;return this.httpClient.post(`/api/1.0/tasks/${e}/duplicate`,void 0,s)}async archive(e){return this.httpClient.post(`/api/1.0/tasks/${e}/archive`)}async unarchive(e){return this.httpClient.post(`/api/1.0/tasks/${e}/unarchive`)}async bulkUpdate(e){return this.httpClient.put("/api/1.0/tasks/bulk",e)}async bulkDelete(e){return this.httpClient.delete("/api/1.0/tasks/bulk",{taskIds:e})}async getByProject(e,t){return this.list({...t,projectId:e})}async getByPhase(e,t){return this.list({...t,phaseId:e})}async getByAssignee(e,t){return this.list({...t,assigneeId:e})}async search(e,t){return this.list({...t,search:e})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllTasks(e){return this.getAllPages(e||{},this.list.bind(this))}iterateTaskPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateTasks(e){return this.iterateItems(e||{},this.list.bind(this))}queryBuilder(){return this.createQueryBuilder("tasks")}async query(e){return this.executeQuery(e,this.list.bind(this))}async querySQL(e){return this.executeSQL(e,this.list.bind(this))}async listWithFields(e,t){let s=await this.list(e);return this.applyFieldSelection(s,t)}forProject(e){let t=this.queryBuilder().whereEquals("projectId",e);return this.bindExecutorToBuilder(t),t}bindExecutorToBuilder(e){e.execute=()=>this.query(e),e.forProject=t=>(e.whereEquals("projectId",t),this.bindExecutorToBuilder(e),e),e.withStatus=t=>(e.whereEquals("status",t),this.bindExecutorToBuilder(e),e),e.assignedTo=t=>(Array.isArray(t)?e.whereIn("assigneeId",t):e.whereEquals("assigneeId",t),this.bindExecutorToBuilder(e),e),e.dueBetween=(t,s)=>(e.whereBetween("dueDate",t,s),this.bindExecutorToBuilder(e),e),e.nameContains=t=>(e.whereContains("taskName",t),this.bindExecutorToBuilder(e),e),e.overdue=()=>{let t=new Date().toISOString().split("T")[0];return e.whereLessThan("dueDate",t).whereNotEquals("status","completed"),this.bindExecutorToBuilder(e),e},e.highPriority=()=>(e.whereGreaterThan("priority",3),this.bindExecutorToBuilder(e),e),e.withEffortMoreThan=t=>(e.whereGreaterThan("effortInMinutes",t),this.bindExecutorToBuilder(e),e);}assignedTo(e){let t;return Array.isArray(e)?t=this.queryBuilder().whereIn("assigneeId",e):t=this.queryBuilder().whereEquals("assigneeId",e),this.bindExecutorToBuilder(t),t}dueBetween(e,t){let s=this.queryBuilder().whereBetween("dueDate",e,t);return this.bindExecutorToBuilder(s),s}withStatus(e){let t=this.queryBuilder().whereEquals("status",e);return this.bindExecutorToBuilder(t),t}nameContains(e){let t=this.queryBuilder().whereContains("taskName",e);return this.bindExecutorToBuilder(t),t}overdue(){let e=new Date().toISOString().split("T")[0],t=this.queryBuilder().whereLessThan("dueDate",e).whereNotEquals("status","completed");return this.bindExecutorToBuilder(t),t}highPriority(){let e=this.queryBuilder().whereGreaterThan("priority",3);return this.bindExecutorToBuilder(e),e}withEffortMoreThan(e){let t=this.queryBuilder().whereGreaterThan("effortInMinutes",e);return this.bindExecutorToBuilder(t),t}async findCriticalTasks(e){let t=this.queryBuilder().whereGreaterThan("priority",3).whereLessThan("dueDate",new Date().toISOString()).whereNotEquals("status","completed").orderBy("dueDate","asc").limit(50);return e&&(t=t.whereEquals("projectId",e)),this.query(t)}async findTeamWorkload(e,t,s){let r=this.queryBuilder().whereIn("assigneeId",e).whereBetween("dueDate",t,s).select(["taskName","assigneeId","effortInMinutes","status","dueDate"]).orderBy("assigneeId","asc").orderBy("dueDate","asc");return this.query(r)}setNavigationFactory(e){this.navFactory=e;}async getNavigable(e){let t=await this.get(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return this.navFactory.createNavigableTask(t)}async listNavigable(e){let t=await this.list(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.data.map(s=>this.navFactory.createNavigableTask(s))}async getAllNavigableTasks(e){let t=await this.getAllTasks(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.map(s=>this.navFactory.createNavigableTask(s))}};var B=class extends m{async list(e){return this.httpClient.get("/api/1.0/fields",e)}async getField(e){return this.httpClient.get(`/api/1.0/fields/${e}`)}async create(e){return this.httpClient.post("/api/1.0/fields",e)}async update(e,t){return this.httpClient.put(`/api/1.0/fields/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/fields/${e}`)}async activate(e){return this.httpClient.post(`/api/1.0/fields/${e}/activate`)}async deactivate(e){return this.httpClient.post(`/api/1.0/fields/${e}/deactivate`)}async reorder(e){return this.httpClient.post("/api/1.0/fields/reorder",{fieldIds:e})}async getOptions(e){return this.httpClient.get(`/api/1.0/fields/${e}/options`)}async createOption(e,t){return this.httpClient.post(`/api/1.0/fields/${e}/options`,t)}async updateOption(e,t,s){return this.httpClient.put(`/api/1.0/fields/${e}/options/${t}`,s)}async deleteOption(e,t){return this.httpClient.delete(`/api/1.0/fields/${e}/options/${t}`)}async bulkUpdateOptions(e,t){return this.httpClient.put(`/api/1.0/fields/${e}/options/bulk`,t)}async reorderOptions(e,t){return this.httpClient.post(`/api/1.0/fields/${e}/options/reorder`,{optionIds:t})}async getEntityFields(e,t){return this.httpClient.get(`/api/1.0/${e}s/${t}/fields`)}async updateEntityFields(e,t,s){return this.httpClient.put(`/api/1.0/${e}s/${t}/fields`,s)}async getByType(e,t){return this.list({...t,type:e})}async getByEntity(e,t){return this.list({...t,entity:e})}async getActive(e){return this.list({...e,active:true})}async getInactive(e){return this.list({...e,active:false})}async getRequired(e){return this.list({...e,required:true})}async getOptional(e){return this.list({...e,required:false})}async search(e,t){return this.list({...t,search:e})}async getTaskFields(e){return this.getByEntity("task",e)}async getProjectFields(e){return this.getByEntity("project",e)}async getUserFields(e){return this.getByEntity("user",e)}async getTimeEntryFields(e){return this.getByEntity("time_entry",e)}async getSelectFields(e){return this.getByType("select",e)}async getMultiselectFields(e){return this.getByType("multiselect",e)}async getTextFields(e){return this.getByType("text",e)}async getDateFields(e){return this.getByType("date",e)}async getNumberFields(e){return this.getByType("number",e)}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllFields(e){return this.getAllPages(e||{},this.list.bind(this))}iterateFieldPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateFields(e){return this.iterateItems(e||{},this.list.bind(this))}};var I=class extends m{async list(e){return this.httpClient.get("/api/1.0/projects",e)}async get(e,t){let s=t?{includeFields:t}:void 0;return this.httpClient.get(`/api/1.0/projects/${e}`,s)}async create(e){return this.httpClient.post("/api/1.0/projects",e)}async update(e,t){return this.httpClient.put(`/api/1.0/projects/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/projects/${e}`)}async archive(e){return this.httpClient.post(`/api/1.0/projects/${e}/archive`)}async unarchive(e){return this.httpClient.post(`/api/1.0/projects/${e}/unarchive`)}async addMembers(e,t){return this.httpClient.post(`/api/1.0/projects/${e}/members`,t)}async removeMembers(e,t){return this.httpClient.delete(`/api/1.0/projects/${e}/members`,t)}async importTemplate(e,t){return this.httpClient.post(`/api/1.0/projects/${e}/import-template`,t)}async assignPlaceholder(e,t){return this.httpClient.post(`/api/1.0/projects/${e}/placeholders/assign`,t)}async unassignPlaceholder(e,t){return this.httpClient.post(`/api/1.0/projects/${e}/placeholders/unassign`,t)}async duplicate(e,t){return this.httpClient.post(`/api/1.0/projects/${e}/duplicate`,{projectName:t})}async getByCompany(e,t){return this.list({...t,companyId:e})}async getByOwner(e,t){return this.list({...t,ownerId:e})}async search(e,t){return this.list({...t,search:e})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllProjects(e){return this.getAllPages(e||{},this.list.bind(this))}iterateProjectPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateProjects(e){return this.iterateItems(e||{},this.list.bind(this))}setNavigationFactory(e){this.navFactory=e;}async getNavigable(e){let t=await this.get(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return this.navFactory.createNavigableProject(t)}async listNavigable(e){let t=await this.list(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.data.map(s=>this.navFactory.createNavigableProject(s))}async getAllNavigableProjects(e){let t=await this.getAllProjects(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.map(s=>this.navFactory.createNavigableProject(s))}};var A=class extends m{async list(e){return this.httpClient.get("/api/1.0/resource-allocations",e)}async getResourceAllocation(e){return this.httpClient.get(`/api/1.0/resource-allocations/${e}`)}async getByProject(e,t){return this.list({...t,projectId:e})}async getByUser(e,t){return this.list({...t,userId:e})}async getByDateRange(e,t,s){return this.list({...s,startDateFrom:e,startDateTo:t})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllResourceAllocations(e){return this.getAllPages(e||{},this.list.bind(this))}iterateResourceAllocationPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateResourceAllocations(e){return this.iterateItems(e||{},this.list.bind(this))}};var F=class extends m{async list(e){return this.httpClient.get("/api/1.0/phases",e)}async getPhase(e){return this.httpClient.get(`/api/1.0/phases/${e}`)}async create(e){return this.httpClient.post("/api/1.0/phases",e)}async update(e,t){return this.httpClient.put(`/api/1.0/phases/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/phases/${e}`)}async archive(e){return this.httpClient.post(`/api/1.0/phases/${e}/archive`)}async unarchive(e){return this.httpClient.post(`/api/1.0/phases/${e}/unarchive`)}async duplicate(e,t){return this.httpClient.post(`/api/1.0/phases/${e}/duplicate`,t)}async reorder(e){return this.httpClient.post("/api/1.0/phases/reorder",e)}async bulkUpdate(e){return this.httpClient.put("/api/1.0/phases/bulk",e)}async bulkDelete(e){return this.httpClient.delete("/api/1.0/phases/bulk",{phaseIds:e})}async getByProject(e,t){return this.list({...t,projectId:e})}async getByStatus(e,t){return this.list({...t,status:e})}async getActive(e){return this.list({...e,archived:false})}async getArchived(e){return this.list({...e,archived:true})}async search(e,t){return this.list({...t,search:e})}async getNotStarted(e){return this.getByStatus("Not Started",e)}async getInProgress(e){return this.getByStatus("In Progress",e)}async getCompleted(e){return this.getByStatus("Completed",e)}async getOnHold(e){return this.getByStatus("On Hold",e)}async getByDateRange(e,t,s){return this.list({...s,startDateFrom:e,startDateTo:t})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllPhases(e){return this.getAllPages(e||{},this.list.bind(this))}iteratePhasePages(e){return this.iteratePages(e||{},this.list.bind(this))}iteratePhases(e){return this.iterateItems(e||{},this.list.bind(this))}};var L=class extends m{async list(e){return this.httpClient.get("/api/1.0/time-offs",e)}async getTimeOff(e){return this.httpClient.get(`/api/1.0/time-offs/${e}`)}async create(e){return this.httpClient.post("/api/1.0/time-offs",e)}async update(e,t){return this.httpClient.put(`/api/1.0/time-offs/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/time-offs/${e}`)}async approve(e){return this.httpClient.post(`/api/1.0/time-offs/${e}/approve`)}async reject(e,t){return this.httpClient.post(`/api/1.0/time-offs/${e}/reject`,{reason:t})}async getByUser(e,t){return this.list({...t,userId:e})}async getByStatus(e,t){return this.list({...t,status:e})}async getByType(e,t){return this.list({...t,type:e})}async getPending(e){return this.getByStatus("pending",e)}async getApproved(e){return this.getByStatus("approved",e)}async getRejected(e){return this.getByStatus("rejected",e)}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllTimeOffs(e){return this.getAllPages(e||{},this.list.bind(this))}iterateTimeOffPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateTimeOffs(e){return this.iterateItems(e||{},this.list.bind(this))}};var Q=class extends m{async list(e){return this.httpClient.get("/api/1.0/users",e)}async getUser(e,t){let s=t?{includeFields:t}:void 0;return this.httpClient.get(`/api/1.0/users/${e}`,s)}async create(e){return this.httpClient.post("/api/1.0/users",e)}async update(e,t){return this.httpClient.put(`/api/1.0/users/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/users/${e}`)}async invite(e){return this.httpClient.post("/api/1.0/users/invite",e)}async bulkInvite(e){return this.httpClient.post("/api/1.0/users/bulk-invite",e)}async activate(e){return this.httpClient.post(`/api/1.0/users/${e}/activate`)}async deactivate(e){return this.httpClient.post(`/api/1.0/users/${e}/deactivate`)}async resendInvite(e){return this.httpClient.post(`/api/1.0/users/${e}/resend-invite`)}async getByCompany(e,t){return this.list({...t,companyId:e})}async getByType(e,t){return this.list({...t,type:e})}async getByStatus(e,t){return this.list({...t,status:e})}async search(e,t){return this.list({...t,search:e})}async getTeamMembers(e){return this.getByType("TEAM_MEMBER",e)}async getPartners(e){return this.getByType("PARTNER",e)}async getCustomers(e){return this.getByType("CUSTOMER",e)}async getActive(e){return this.getByStatus("ACTIVE",e)}async getInvited(e){return this.getByStatus("INVITED",e)}async getInactive(e){return this.getByStatus("INACTIVE",e)}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllUsers(e){return this.getAllPages(e||{},this.list.bind(this))}iterateUserPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateUsers(e){return this.iterateItems(e||{},this.list.bind(this))}setNavigationFactory(e){this.navFactory=e;}async getNavigable(e){let t=await this.getUser(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return this.navFactory.createNavigableUser(t)}async listNavigable(e){let t=await this.list(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.data.map(s=>this.navFactory.createNavigableUser(s))}async getAllNavigableUsers(e){let t=await this.getAllUsers(e);if(!this.navFactory)throw new Error("Navigation factory not initialized");return t.map(s=>this.navFactory.createNavigableUser(s))}};var D=class extends m{async list(e){return this.httpClient.get("/api/1.0/spaces",e)}async getSpace(e){return this.httpClient.get(`/api/1.0/spaces/${e}`)}async create(e){return this.httpClient.post("/api/1.0/spaces",e)}async update(e,t){return this.httpClient.put(`/api/1.0/spaces/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/spaces/${e}`)}async archive(e){return this.httpClient.post(`/api/1.0/spaces/${e}/archive`)}async unarchive(e){return this.httpClient.post(`/api/1.0/spaces/${e}/unarchive`)}async addMembers(e,t){return this.httpClient.post(`/api/1.0/spaces/${e}/members`,t)}async removeMembers(e,t){return this.httpClient.delete(`/api/1.0/spaces/${e}/members`,t)}async getByType(e,t){return this.list({...t,type:e})}async getByVisibility(e,t){return this.list({...t,visibility:e})}async getByOwner(e,t){return this.list({...t,ownerId:e})}async getByProject(e,t){return this.list({...t,projectId:e})}async getPublic(e){return this.getByVisibility("public",e)}async getPrivate(e){return this.getByVisibility("private",e)}async search(e,t){return this.list({...t,search:e})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllSpaces(e){return this.getAllPages(e||{},this.list.bind(this))}iterateSpacePages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateSpaces(e){return this.iterateItems(e||{},this.list.bind(this))}};var U=class extends m{async list(e){return this.httpClient.get("/api/1.0/time-entries",e)}async getTimeEntry(e){return this.httpClient.get(`/api/1.0/time-entries/${e}`)}async create(e){return this.httpClient.post("/api/1.0/time-entries",e)}async update(e,t){return this.httpClient.put(`/api/1.0/time-entries/${e}`,t)}async deleteTimeEntry(e){return this.httpClient.delete(`/api/1.0/time-entries/${e}`)}async bulkCreate(e){return this.httpClient.post("/api/1.0/time-entries/bulk",e)}async bulkUpdate(e){return this.httpClient.put("/api/1.0/time-entries/bulk",e)}async bulkDelete(e){return this.httpClient.delete("/api/1.0/time-entries/bulk",e)}async approve(e){return this.httpClient.post("/api/1.0/time-entries/approve",e)}async reject(e){return this.httpClient.post("/api/1.0/time-entries/reject",e)}async getCategories(){return this.httpClient.get("/api/1.0/time-entry-categories")}async getCategory(e){return this.httpClient.get(`/api/1.0/time-entry-categories/${e}`)}async createCategory(e){return this.httpClient.post("/api/1.0/time-entry-categories",e)}async updateCategory(e,t){return this.httpClient.put(`/api/1.0/time-entry-categories/${e}`,t)}async deleteCategory(e){return this.httpClient.delete(`/api/1.0/time-entry-categories/${e}`)}async getByProject(e,t){return this.list({...t,projectId:e})}async getByUser(e,t){return this.list({...t,userId:e})}async getByPhase(e,t){return this.list({...t,phaseId:e})}async getByTask(e,t){return this.list({...t,taskId:e})}async getByCategory(e,t){return this.list({...t,categoryId:e})}async getBillable(e){return this.list({...e,billable:true})}async getNonBillable(e){return this.list({...e,billable:false})}async getApproved(e){return this.list({...e,approved:true})}async getPending(e){return this.list({...e,approved:false})}async getByDateRange(e,t,s){return this.list({...s,dateFrom:e,dateTo:t})}async search(e,t){return this.list({...t,search:e})}async getReport(e){return this.httpClient.get("/api/1.0/time-entries/report",e)}async exportReport(e){return this.httpClient.get("/api/1.0/time-entries/export",e)}async startTimer(e){return this.httpClient.post("/api/1.0/time-entries/timer/start",e)}async stopTimer(e){return this.httpClient.post(`/api/1.0/time-entries/timer/${e}/stop`)}async pauseTimer(e){return this.httpClient.post(`/api/1.0/time-entries/timer/${e}/pause`)}async resumeTimer(e){return this.httpClient.post(`/api/1.0/time-entries/timer/${e}/resume`)}async getActiveTimer(){return this.httpClient.get("/api/1.0/time-entries/timer/active")}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllTimeEntries(e){return this.getAllPages(e||{},this.list.bind(this))}iterateTimeEntryPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateTimeEntries(e){return this.iterateItems(e||{},this.list.bind(this))}};var q=class extends m{async list(e){return this.httpClient.get("/api/1.0/space-documents",e)}async getSpaceDocument(e){return this.httpClient.get(`/api/1.0/space-documents/${e}`)}async create(e){return this.httpClient.post("/api/1.0/space-documents",e)}async update(e,t){return this.httpClient.put(`/api/1.0/space-documents/${e}`,t)}async deleteResource(e){return this.httpClient.delete(`/api/1.0/space-documents/${e}`)}async download(e){return this.httpClient.get(`/api/1.0/space-documents/${e}/download`)}async getContent(e){return this.httpClient.get(`/api/1.0/space-documents/${e}/content`)}async updateContent(e,t){return this.httpClient.put(`/api/1.0/space-documents/${e}/content`,{content:t})}async duplicate(e,t,s){return this.httpClient.post(`/api/1.0/space-documents/${e}/duplicate`,{documentName:t,spaceId:s})}async move(e,t){return this.httpClient.post(`/api/1.0/space-documents/${e}/move`,{spaceId:t})}async getVersions(e){return this.httpClient.get(`/api/1.0/space-documents/${e}/versions`)}async getVersion(e,t){return this.httpClient.get(`/api/1.0/space-documents/${e}/versions/${t}`)}async restoreVersion(e,t){return this.httpClient.post(`/api/1.0/space-documents/${e}/versions/${t}/restore`)}async getBySpace(e,t){return this.list({...t,spaceId:e})}async getByType(e,t){return this.list({...t,type:e})}async getByCreator(e,t){return this.list({...t,createdBy:e})}async getByTags(e,t){return this.list({...t,tags:e})}async search(e,t){return this.list({...t,search:e})}async getNextPage(e,t){return this.getNextPageInternal(e,t||{},this.list.bind(this))}async getAllSpaceDocuments(e){return this.getAllPages(e||{},this.list.bind(this))}iterateSpaceDocumentPages(e){return this.iteratePages(e||{},this.list.bind(this))}iterateSpaceDocuments(e){return this.iterateItems(e||{},this.list.bind(this))}};var x=class{constructor(e){this.httpClient=new E(e),this.navFactory=new N(this),this.tasks=new j(this.httpClient),this.fields=new B(this.httpClient),this.projects=new I(this.httpClient),this.resourceAllocations=new A(this.httpClient),this.phases=new F(this.httpClient),this.timeOffs=new L(this.httpClient),this.users=new Q(this.httpClient),this.spaces=new D(this.httpClient),this.timeTracking=new U(this.httpClient),this.spaceDocuments=new q(this.httpClient),this.export=new z(this),this.import=new _(this),this.initializeNavigationCapabilities();}initializeNavigationCapabilities(){"setNavigationFactory"in this.tasks&&this.tasks.setNavigationFactory(this.navFactory),"setNavigationFactory"in this.projects&&this.projects.setNavigationFactory(this.navFactory),"setNavigationFactory"in this.users&&this.users.setNavigationFactory(this.navFactory);}},z=class{constructor(e){this.client=e;}async tasks(e={},t){let s=await this.client.tasks.getAllTasks(e);return v.generateExport(s,t)}async projects(e={},t){let s=await this.client.projects.getAllProjects(e);return v.generateExport(s,t)}async users(e={},t){let s=await this.client.users.getAllUsers(e);return v.generateExport(s,t)}async timeEntries(e={},t){let s=await this.client.timeTracking.getAllTimeEntries(e);return v.generateExport(s,t)}async data(e,t){return v.generateExport(e,t)}},_=class{constructor(e){this.client=e;}async tasks(e,t,s={}){let r=this.parseContent(e,t);return f.importData(r,async i=>this.client.tasks.create(i),s)}async projects(e,t,s={}){let r=this.parseContent(e,t);return f.importData(r,async i=>this.client.projects.create(i),s)}async users(e,t,s={}){let r=this.parseContent(e,t);return f.importData(r,async i=>this.client.users.create(i),s)}async data(e,t,s,r={}){let i=this.parseContent(e,t);return f.importData(i,s,r)}async validate(e,t,s,r={}){let i=this.parseContent(e,t);return f.validateImportData(i,s,r)}parseContent(e,t){switch(t){case "csv":return f.parseCSV(e);case "json":return f.parseJSON(e);case "xlsx":return f.parseExcel(e);default:throw new Error(`Unsupported format: ${t}`)}}};var Je=x;exports.BaseResource=m;exports.FieldsResource=B;exports.HttpClient=E;exports.PhasesResource=F;exports.ProjectsResource=I;exports.ResourceAllocationsResource=A;exports.RocketlaneClient=x;exports.SpaceDocumentsResource=q;exports.SpacesResource=D;exports.TasksResource=j;exports.TimeOffsResource=L;exports.TimeTrackingResource=U;exports.UsersResource=Q;exports.default=Je;//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map